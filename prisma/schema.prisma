// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  username String  @id @db.VarChar(100)
  password String  @db.VarChar(100)
  name     String  @db.VarChar(100)
  token    String? @db.VarChar(100)


  ticket Ticket[]
  contacts Contact[]

  @@map("users")
}

model Contact {
  id          Int     @id @default(autoincrement())
  first_name  String  @db.VarChar(100)
  last_name   String? @db.VarChar(100)
  email       String? @db.VarChar(100)
  phone       String? @db.VarChar(20)
  dateofbirth DateTime?
  ofcNo       String?  @db.VarChar(20)
  nationalId  BigInt?   @db.BigInt
 username   String  @db.VarChar(100)

  user      User      @relation(fields: [username], references: [username])
  addresses Address[]

  @@map("contacts")
}

model Address {
  id          Int     @id @default(autoincrement())
  street      String? @db.VarChar(255)
  city        String? @db.VarChar(100)
  province    String? @db.VarChar(100)
  country     String  @db.VarChar(100)
  postal_code String  @db.VarChar(10)
  contact_id  Int

  contact Contact @relation(fields: [contact_id], references: [id])

  @@map("addresses")
}

model Show {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(255)
  description String? @db.VarChar(255)
  duration    String? @db.VarChar(50)
  rating      String? @db.VarChar(20)
  theaterId   Int     // Foreign key ke Theater
  
  theater     Theater @relation(fields: [theaterId], references: [id])

  showtime Showtime []

  @@map("shows")
}

model Showtime {
  id          Int     @id @default(autoincrement())
  showDate    DateTime?
  showTime    String? @db.VarChar(255)
  showId      Int

  show Show @relation(fields: [showId], references: [id])
  ticket Ticket []

  @@map("showtimes")
}

model Theater {
  id          Int     @id @default(autoincrement())
  name       String  @db.VarChar(255)
  location    String? @db.VarChar(255)
  capacity    String? @db.VarChar(50)

  shows     Show[] // Relasi ke Show

  @@map("theaters")
}

model Ticket {
  id           Int     @id @default(autoincrement())
  seatNumber   String  @db.VarChar(255)
  price        String? @db.VarChar(255)
  purchaseDate DateTime?
  showtimeId   Int
  username     String  @db.VarChar(100) 

  showtime Showtime @relation(fields: [showtimeId], references: [id])
  user User @relation(fields: [username], references: [username])

  payment Payment[]   

  @@map("tickets")
}

model Payment {
  id            Int     @id @default(autoincrement())
  amount        String  @db.VarChar(255)
  paymentDate   DateTime?
  metodePayment String? @db.VarChar(50)
  status        String? @db.VarChar(50)
  ticketId      Int    

  ticket Ticket @relation(fields: [ticketId], references: [id])

  @@map("payments")
}